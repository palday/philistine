# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python

stages:
  - test

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - export MPLBACKEND=Agg
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r full_requirements.txt
  - pip install tox flake8

after_script:
  - pip install codecov
  - codecov --token=0776fc46-cbe0-444f-9a8c-c887c34d48fb

python2:
  image: python:2.7
  stage: test
  script: tox -e py27

#python34:
#  image: python:3.4
#  stage: test
#  script: tox -e py34

python35:
  image: python:3.5
  stage: test
  script: tox -e py35

python36:
  image: python:3.6
  stage: test
  script: tox -e py36

#python37:
#  image: python:3.7-rc
#  stage: test
#  script: tox -e py37

readme:
  stage: test
  script: tox -e readme

docs:
  stage: test
  script: tox -e docs

linters:
  stage: test
  script: tox -e linters

#test:
  #script:
  #- python setup.py test
  #- pip install tox flake8  # you can also use tox
  #- tox -e py36

#run:
  #script:
  #- python setup.py bdist_wheel
  ## an alternative approach is to install and run:
  #- pip install dist/*
  ## run the command here
  #artifacts:
    #paths:
    #- dist/*.whl

#pages:
#  script:
#  - pip install sphinx sphinx-rtd-theme
#  - cd doc ; make html
#  - mv build/html/ ../public/
#  artifacts:
#    paths:
#    - public
#  only:
#  - master

